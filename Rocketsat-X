#include <Wire.h> 
#include "SparkFunMPL3115A2.h" 
#include <SD.h> 
#include <SPI.h> 
#include <SoftwareSerial.h> 
int pa; 
int alt; 
int valG; 
int valB; 
int valD; 
int tempPinGEIG = 1; 
int tempPinDNA = 0; 
int tempPinBOX = 2; 
const int chipSelect = 8; 
int i; 
int count; 
int old = -1; 
int check; 
float CPM; 
float now; 
float time; 
int start; 
char OnesString[10]; 
char DecimalString[10]; 
char TimerString[10]; 
File myFile; 
SoftwareSerial mySerial(3,2); 
MPL3115A2 myPressure; 
void setup() 
{ 
// Open serial communications and wait for port to open: 
Wire.begin(); // Join i2c bus 
Serial.begin(9600); // Start serial for output 
Serial.begin(9600); 
myPressure.begin(); 
myPressure.setModeAltimeter(); // Measure altitude above sea level in meters 
myPressure.setModeBarometer(); // Measure pressure in Pascals from 20 to 110 kPa 
myPressure.setOversampleRate(7); // Set Oversample to the recommended 128 
myPressure.enableEventFlags(); // Enable all three pressure and temp event flags 
Serial.print("Initializing SD card..."); 
// On the Ethernet Shield, CS is pin 4. It's set as an output by default. 
// Note that even if it's not used as the CS pin,
//the hardware SS pin 
// (10 on most Arduino boards, 53 on the Mega) must be left as an output 
// or the SD library functions will not work. 
pinMode(10, OUTPUT); 
if (!SD.begin(4)) { 
Serial.println("initialization failed!"); 
return; 
} 
Serial.println("initialization done."); 
// open the file. note that only one file can be 
//open at a time, 
// so you have to close this one before opening another. 
myFile = SD.open("test.txt", FILE_WRITE); 
if (myFile) { 
Serial.print("Writing to test.txt..."); 
myFile.println("Datalogging Begin."); 
// close the file: 
myFile.close(); 
Serial.println("done."); 
} else { 
// if the file didn't open, print an error: 
Serial.println("error opening test.txt"); 
} 
// re-open the file for reading: 
myFile = SD.open("test.txt"); 
if (myFile) { 
Serial.println("test.txt"); 
// read from the file until there's nothing else in it: 
while (myFile.available()) { 
Serial.write(myFile.read()); 
} 
// close the file: 
myFile.close(); 
} else { 
// if the file didn't open, print an error: 
Serial.println("error opening FlightDatatest.txt"); 
} 
} 
void loop(){{{ 
myFile = SD.open("test.txt", FILE_WRITE); 
i = 0; 
count = 0; 
start = millis(); 
while (i < 30){ 
if (Serial.available() > 0) { // If information available 
check = Serial.read(); // Read serial input 
if (check > 0){ 
count++; // If it is a hit, increment counter 
} 
} 
i = millis(); 
i = i - start; 
i = i/1000; 
delay (1000); 
} 
CPM = count*2; 
old = count; // Resets 'if' statement 
int cpm = CPM; 
int temp = CPM*1000; 
int decimal = temp % (cpm*1000); 
delay (1000); 
Serial.println("CPM:"); 
Serial.println(CPM, DEC); 
myFile = SD.open("test.txt", FILE_WRITE); 
if(myFile){ 
myFile.print("CPM:"); 
myFile.print(CPM); 
myFile.println(); 
myFile.close(); 
delay (1000); 
} 
myFile = SD.open("test.txt", FILE_WRITE); 
valG = analogRead(tempPinGEIG); 
float mvG = ( valG/1024.0)*5000; 
float celG = mvG/10-419; 
delay (1000); 
if(myFile){ 
myFile.print("Temprature Geiger Counter:"); 
myFile.print(celG); 
myFile.print("*C"); 
myFile.println(); 
myFile.close(); 
delay (1000); 
} 
Serial.print("TEMPRATURE GEIG = "); 
Serial.print(celG); 
Serial.print("*C"); 
Serial.println(); 
valD = analogRead(tempPinDNA); 
float mvD = ( valD/1024.0)*5000; 
float celD = mvD/10-405; 
myFile = SD.open("test.txt", FILE_WRITE); 
Serial.print("TEMPRATURE DNA = "); 
Serial.print(celD); 
Serial.print("*C"); 
Serial.println(); 
if(myFile){ 
myFile.print("Temprature DNA:"); 
myFile.print(celD); 
myFile.print("*C"); 
myFile.println(); 
myFile.close(); 
} 
valB = analogRead(tempPinBOX); 
float mvB = ( valB/1024.0)*5000; 
float celB = mvB/10-27; 
delay (1000); 
myFile = SD.open("test.txt", FILE_WRITE); 
Serial.print("TEMPRATURE BOX = "); 
Serial.print(celB); 
Serial.print("*C"); 
Serial.println(); 
if(myFile){ 
myFile.print("Temprature BOX:"); 
myFile.print(celB); 
myFile.print("*C"); 
myFile.println(); 
myFile.close(); 
delay (1000); 
} 
myFile = SD.open("test.txt", FILE_WRITE); 
float altitude = myPressure.readAltitude(); 
alt=altitude - 19953.30; 
Serial.print("Altitude(m):"); 
Serial.print(alt); 
Serial.println(); 
if(myFile){ 
myFile.print("Altitude(m):"); 
myFile.print(alt); 
myFile.println(); 
myFile.close(); 
delay (100); 
} 
myFile = SD.open("test.txt", FILE_WRITE); 
float pressure = myPressure.readPressure(); 
pa = pressure; 
Serial.print("Pressure(Pa):"); 
Serial.print(pa); 
Serial.println(); 
if(myFile){ 
myFile.print("Pressure(Pa):"); 
myFile.print(pa); 
myFile.println(); 
myFile.close(); 
delay (1000); 
} 
} }} 
